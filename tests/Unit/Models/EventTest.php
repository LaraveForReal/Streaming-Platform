<?php

namespace Tests\Unit\Models;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Hash;
use Tests\TestCase;

class EventTest extends TestCase
{
    use RefreshDatabase;

    private $eventRepository;
    private $userRepository;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->eventRepository = App::make('App\Interfaces\EventInterface');
        $this->userRepository = App::make('App\Interfaces\UserInterface');
    }

    /**
     * Event create method returns the created event.
     *
     * @test
     * @return void
     */
    public function event_created_and_returns_created_event_and_returns_users_count_1()
    {
        $this->userRepository->create([
           'name' => 'user',
           'email' => 'bob@email.com',
           'password' => Hash::make('password'),
        ]);

        $eventData = [
            'user_id' => 1,
            'name' => 'Test',
            'stream_url' => 'http://google.com',
            'start_datetime' => '2021-04-17 13:00:00',
            'end_datetime' => '2021-04-17 14:00:00',
        ];

        $event = $this->eventRepository->create($eventData);

        $this->assertInstanceOf('App\Models\Event', $event);
        $this->assertCount(1, $event->users);
    }
}
